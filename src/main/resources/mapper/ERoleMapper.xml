<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.senoops.dao.ERoleMapper">
    <resultMap id="BaseResultMap" type="com.senoops.model.ERole">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="role" property="role" jdbcType="CHAR"/>
        <result column="user_code" property="userCode" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_phone" property="userPhone" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
   		id, user_id, role,user_code,user_name,user_phone
  	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from e_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    
    <select id="selectByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from e_role
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    
     <select id="select" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from e_role
        <where>
        	<if test="id != null">
                id = #{id,jdbcType=INTEGER},
            </if>
        	<if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=CHAR},
            </if>
            <if test="userCode != null">
                user_code = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
        </where>
        <if test="orderUtil != null">
            ORDER BY ${orderUtil.orderBy}
            <if test="orderUtil.isDesc">desc</if>
        </if>
        <if test="pageUtil != null">
            LIMIT #{pageUtil.pageStart},#{pageUtil.count}
        </if>
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
	    delete from e_role
	    where id = #{id,jdbcType=INTEGER}
  	</delete>

    <insert id="insertSelective" parameterType="com.senoops.model.ERole">
        insert into e_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="userCode != null">
                user_code,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="role != null">
                #{role,jdbcType=CHAR},
            </if>
            <if test="userCode != null">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.senoops.model.ERole">
        update e_role
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=CHAR},
            </if>
            <if test="userCode != null">
                user_code = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>